{"version":3,"sources":["pages/Admin/Dashboard/components/TotalUsers/TotalUsers.js","pages/Admin/Dashboard/components/TotalCinemas/TotalCinemas.js","pages/Admin/Dashboard/components/TotalMovies/TotalMovies.js","pages/Admin/Dashboard/components/TotalReservations/TotalReservations.js","theme/palette.js","pages/Admin/Dashboard/components/BestMovies/chart.js","pages/Admin/Dashboard/components/BestMovies/BestMovies.js","pages/Admin/Dashboard/components/UsersByDevice/UsersByDevice.js","pages/Admin/Dashboard/Dashboard.js"],"names":["useStyles","makeStyles","theme","root","height","content","alignItems","display","title","fontWeight","avatar","backgroundColor","palette","success","main","width","icon","difference","marginTop","spacing","differenceIcon","color","dark","differenceValue","marginRight","TotalUsers","props","className","users","classes","Card","classnames","CardContent","Grid","container","justify","item","Typography","gutterBottom","variant","Avatar","caption","error","TotalCinemas","cinemas","TotalMovies","movies","primary","contrastText","white","TotalReservations","reservations","type","common","black","commonBackground","neutral","muted","default","light","logoBg","border","secondary","green","info","blue","warning","yellow","danger","red","text","blueGrey","link","background","paper","divider","oxfordBlue","prussianBlue","darkCerulean","pewterBlue","isabelline","options","responsive","maintainAspectRatio","animation","legend","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","borderColor","titleFontColor","bodyFontColor","footerFontColor","layout","padding","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","position","actions","justifyContent","BestMovies","bestMovies","data","labels","map","movie","toUpperCase","datasets","label","count","CardHeader","action","Button","size","Divider","CardActions","stats","device","textAlign","deviceIcon","UsersByDevice","rest","useTheme","hoverBorderColor","cutoutPercentage","devices","value","IconButton","key","style","Dashboard","getBestMovies","total","reservationCounter","reservation","movieId","filter","r","length","result","Map","has","set","push","sort","a","b","slice","res","find","_id","this","getUsers","getCinemas","getMovies","getReservations","lg","sm","xl","xs","md","Component","mapDispatchToProps","connect","userState","cinemaState","movieState","reservationState","withStyles"],"mappings":"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","file":"static/js/26.99208ec0.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalUsers = props => {\n  const { className, users } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classnames(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              TOTAL USERS\n            </Typography>\n            <Typography variant=\"h3\">{users}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography className={classes.differenceValue} variant=\"body2\">\n            16%\n          </Typography>\n          <Typography className={classes.caption} variant=\"caption\">\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalUsers;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport TheatersIcon from '@material-ui/icons/Theaters';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.error.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.error.dark\n  },\n  differenceValue: {\n    color: theme.palette.error.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCinemas = props => {\n  const { className, cinemas } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classnames(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              TOTAL CINEMAS\n            </Typography>\n            <Typography variant=\"h3\">{cinemas}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <TheatersIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography className={classes.differenceValue} variant=\"body2\">\n            16%\n          </Typography>\n          <Typography className={classes.caption} variant=\"caption\">\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCinemas.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCinemas;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport TheatersIcon from '@material-ui/icons/Theaters';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.error.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.error.dark\n  },\n  differenceValue: {\n    color: theme.palette.error.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalMovies = props => {\n  const { className, movies } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classnames(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              TOTAL MOVIES\n            </Typography>\n            <Typography variant=\"h3\">{movies}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <TheatersIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography className={classes.differenceValue} variant=\"body2\">\n            16%\n          </Typography>\n          <Typography className={classes.caption} variant=\"caption\">\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalMovies.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalMovies;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport EventIcon from '@material-ui/icons/Event';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst TotalReservations = props => {\n  const { className, reservations } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classnames(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\">\n              TOTAL RESERVATIONS\n            </Typography>\n            <Typography color=\"inherit\" variant=\"h3\">\n              {reservations}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <EventIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalReservations.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalReservations;\n","import { red, blue, blueGrey, yellow, green } from '@material-ui/core/colors';\nconst white = '#FFF';\nconst black = '#000';\n\nexport default {\n  type: 'light',\n  common: {\n    black,\n    white,\n    commonBackground: white,\n    contrastText: black,\n    neutral: '#E4E7EB',\n    muted: '#9EA0A4'\n  },\n  default: {\n    light: 'rgba(41, 150, 243, .1)',\n    main: 'rgba(0, 40, 73, .9)',\n    dark: 'rgb(0, 40, 73)',\n    logoBg: 'rgb(51, 51, 51)',\n    border: 'rgba(0, 40, 73, .1)',\n    contrastText: white\n  },\n  primary: {\n    contrastText: white,\n    main: '#0767DB',\n    light: '#F6F9FD',\n    dark: '#0B48A0'\n  },\n  secondary: {\n    contrastText: white,\n    main: '#7d58ff',\n    light: '',\n    dark: '#37248F'\n  },\n  success: {\n    light: green[300],\n    main: green[500],\n    dark: green[700],\n    contrastText: white\n  },\n  info: {\n    light: blue[300],\n    main: blue[500],\n    dark: blue[700],\n    contrastText: white\n  },\n  warning: {\n    light: yellow[300],\n    main: yellow[500],\n    dark: yellow[700],\n    contrastText: white\n  },\n  danger: {\n    light: red[300],\n    main: red[500],\n    dark: red[700],\n    contrastText: white\n  },\n  text: {\n    primary: blueGrey[900],\n    secondary: blueGrey[600],\n    link: blue[600]\n  },\n  background: {\n    default: '#f8fafc',\n    dark: 'rgb(26, 26, 26)',\n    paper: white\n  },\n  border: '#DFE3E8',\n  divider: '#DFE3E8',\n  oxfordBlue: 'rgba(5, 41, 73, 1)',\n  prussianBlue: 'rgba(19, 49, 92, 1)',\n  darkCerulean: 'rgba(19, 64, 116, 1)',\n  pewterBlue: 'rgba(141, 169, 196, 1)',\n  isabelline: 'rgba(238, 244, 237, 1)'\n};\n","import palette from '../../../../../theme/palette';\n\nexport const data = {\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\n  datasets: [\n    {\n      label: 'This year',\n      backgroundColor: palette.primary.main,\n      data: [18, 5, 19, 27, 29, 19, 20]\n    },\n    {\n      label: 'Last year',\n      backgroundColor: palette.neutral,\n      data: [11, 20, 12, 29, 30, 25, 13]\n    }\n  ]\n};\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: false,\n  legend: { display: false },\n  cornerRadius: 20,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: { padding: 0 },\n  scales: {\n    xAxes: [\n      {\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport palette from '../../../../../theme/palette';\nimport { options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst BestMovies = props => {\n  const { className, bestMovies } = props;\n  const classes = useStyles();\n\n  const data = {\n    labels: bestMovies.map(movie => movie.movie.title.toUpperCase()),\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: palette.primary.main,\n        data: bestMovies.map(movie => movie.count)\n      },\n      {\n        label: 'Last year',\n        backgroundColor: palette.neutral,\n        data: [11, 20, 12, 29, 30]\n      }\n    ]\n  };\n\n  return (\n    <Card className={classnames(classes.root, className)}>\n      <CardHeader\n        action={\n          <Button size=\"small\" variant=\"text\">\n            Best 5<ArrowDropDownIcon />\n          </Button>\n        }\n        title=\"Best Movies\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Bar data={data} options={options} />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button color=\"primary\" size=\"small\" variant=\"text\">\n          Overview <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nBestMovies.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BestMovies;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card {...rest} className={classnames(classes.root, className)}>\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut data={data} options={options} />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div className={classes.device} key={device.title}>\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography style={{ color: device.color }} variant=\"h2\">\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, Grid } from '@material-ui/core';\nimport {\n  TotalUsers,\n  TotalCinemas,\n  TotalMovies,\n  TotalReservations,\n  BestMovies,\n  UsersByDevice\n} from './components';\nimport {\n  getUsers,\n  getCinemas,\n  getMovies,\n  getReservations\n} from '../../../store/actions';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(4)\n  }\n});\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n    this.props.getCinemas();\n    this.props.getMovies();\n    this.props.getReservations();\n  }\n\n  getBestMovies = (reservations, movies, total = 5) => {\n    const reservationCounter = reservations.map(reservation => ({\n      movieId: reservation.movieId,\n      count: reservations.filter(r => r.movieId === reservation.movieId).length\n    }));\n\n    const result = [];\n    const map = new Map();\n    for (const item of reservationCounter) {\n      if (!map.has(item.movieId)) {\n        map.set(item.movieId, true); // set any value to Map\n        result.push({\n          movieId: item.movieId,\n          count: item.count\n        });\n      }\n    }\n    return result\n      .sort((a, b) => b.count - a.count)\n      .slice(0, total)\n      .map(res => ({\n        movie: movies.find(movie => movie._id === res.movieId),\n        count: res.count\n      }));\n  };\n\n  render() {\n    const { classes, users, cinemas, movies, reservations } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalUsers users={users.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalCinemas cinemas={cinemas.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalMovies movies={movies.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalReservations reservations={reservations.length} />\n          </Grid>\n          <Grid item lg={8} md={12} xl={9} xs={12}>\n            <BestMovies\n              bestMovies={this.getBestMovies(reservations, movies, 5)}\n            />\n          </Grid>\n          <Grid item lg={4} md={6} xl={3} xs={12}>\n            <UsersByDevice />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  userState,\n  cinemaState,\n  movieState,\n  reservationState\n}) => ({\n  users: userState.users,\n  cinemas: cinemaState.cinemas,\n  movies: movieState.movies,\n  reservations: reservationState.reservations\n});\nconst mapDispatchToProps = {\n  getUsers,\n  getCinemas,\n  getMovies,\n  getReservations\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Dashboard));\n"],"sourceRoot":""}