{"version":3,"sources":["pages/Admin/ReservationList/components/ReservationsTable/ReservationTable.js","pages/Admin/ReservationList/components/ReservationsTable/styles.js","pages/Admin/ReservationList/components/ReservationsToolbar/index.js","pages/Admin/ReservationList/components/ReservationsToolbar/styles.js","pages/Admin/ReservationList/components/ReservationsCalendar/ReservationsCalendar.js","pages/Admin/ReservationList/ReservationList.js","pages/Admin/ReservationList/styles.js"],"names":["ReservationsTable","state","rowsPerPage","page","handleChangePage","event","setState","handleChangeRowsPerPage","target","value","onFindAttr","id","list","attr","item","find","_id","this","props","classes","className","reservations","movies","cinemas","rootClassName","classNames","root","noPadding","Table","TableHead","TableRow","TableCell","align","TableBody","sort","a","b","Date","date","slice","map","reservation","tableRow","hover","key","tableCell","username","phone","startAt","movieId","cinemaId","ticketPrice","total","checkin","TablePagination","backIconButtonProps","component","count","length","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","Component","defaultProps","onSelect","onShowDetails","withStyles","theme","height","whiteSpace","tableCellInner","display","alignItems","avatar","backgroundColor","palette","primary","main","fontSize","fontWeight","width","nameText","marginLeft","spacing","cursor","ReservationsToolbar","search","mode","onChangeSearch","onChangeMode","row","searchInput","placeholder","onChange","marginTop","justifyContent","marginRight","ReservationsCalendar","events","title","start","url","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ReservationList","e","getReservations","getMovies","getCinemas","filteredReservations","match","content","progressWrapper","CircularProgress","mapDispatchToProps","connect","reservationState","movieState","cinemaState","padding","paddingTop","paddingBottom"],"mappings":"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","file":"static/js/27.9d7f683f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination\n} from '@material-ui/core';\n\nimport { Portlet, PortletContent } from '../../../../../components';\nimport styles from './styles';\n\nclass ReservationsTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0\n  };\n\n  static propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n    onShowDetails: PropTypes.func,\n    reservations: PropTypes.array.isRequired,\n    movies: PropTypes.array.isRequired,\n    cinemas: PropTypes.array.isRequired\n  };\n\n  static defaultProps = {\n    reservations: [],\n    movies: [],\n    cinemas: [],\n    onSelect: () => {},\n    onShowDetails: () => {}\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  onFindAttr = (id, list, attr) => {\n    const item = list.find(item => item._id === id);\n    return item ? item[attr] : `Not ${attr} Found`;\n  };\n\n  render() {\n    const { classes, className, reservations, movies, cinemas } = this.props;\n    const { rowsPerPage, page } = this.state;\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletContent noPadding>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">User</TableCell>\n                <TableCell align=\"left\">Phone</TableCell>\n                <TableCell align=\"left\">Start At</TableCell>\n                <TableCell align=\"left\">Movie</TableCell>\n                <TableCell align=\"left\">Cinema</TableCell>\n                <TableCell align=\"left\">Ticket Price</TableCell>\n                <TableCell align=\"left\">Total</TableCell>\n                <TableCell align=\"left\">Checkin</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {reservations\n                .sort((a, b) => new Date(b.date) - new Date(a.date))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(reservation => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={reservation._id}>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.username}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.phone}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.startAt}\n                    </TableCell>\n\n                    <TableCell className={classes.tableCell}>\n                      {this.onFindAttr(reservation.movieId, movies, 'title')}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {this.onFindAttr(reservation.cinemaId, cinemas, 'name')}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.ticketPrice}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.total}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {reservation.checkin ? 'yes' : 'no'}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            backIconButtonProps={{\n              'aria-label': 'Previous Page'\n            }}\n            component=\"div\"\n            count={reservations.length}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page'\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </PortletContent>\n      </Portlet>\n    );\n  }\n}\n\nexport default withStyles(styles)(ReservationsTable);\n","export default theme => ({\n  root: {},\n  tableRow: {\n    height: '64px'\n  },\n  tableCell: {\n    whiteSpace: 'nowrap'\n  },\n  tableCellInner: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    display: 'inline-flex',\n    fontSize: '14px',\n    fontWeight: 500,\n    height: '36px',\n    width: '36px'\n  },\n  nameText: {\n    display: 'inline-block',\n    marginLeft: theme.spacing(2),\n    fontWeight: 500,\n    cursor: 'pointer'\n  }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\n\nimport { SearchInput, DisplayMode } from '../../../../../components';\nimport styles from './styles';\n\nclass ReservationsToolbar extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object.isRequired\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      search,\n      mode,\n      onChangeSearch,\n      onChangeMode\n    } = this.props;\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <div className={rootClassName}>\n        <div className={classes.row}>\n          <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search reservation by Phone\"\n            value={search}\n            onChange={onChangeSearch}\n          />\n          <DisplayMode mode={mode} onChange={onChangeMode} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ReservationsToolbar);\n","export default theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    justifyContent: 'space-between'\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n});\n","import React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\n\nclass ReservationsCalendar extends Component {\n  onFindAttr = (id, list, attr) => {\n    const item = list.find(item => item._id === id);\n    return item ? item[attr] : `Not ${attr} Found`;\n  };\n\n  render() {\n    const { reservations, cinemas, movies } = this.props;\n\n    const events = reservations.map(reservation => ({\n      title: `Movie: ${this.onFindAttr(\n        reservation.movieId,\n        movies,\n        'title'\n      )}-Cinema: ${this.onFindAttr(reservation.cinemaId, cinemas, 'name')}`,\n      start: reservation.date,\n      // startTime: reservation.startAt,\n      // end: reservation.date,\n      url: `/movie/${reservation.movieId}`\n    }));\n\n    return (\n      <FullCalendar\n        defaultView=\"dayGridMonth\"\n        header={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        }}\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        events={events}\n      />\n    );\n  }\n}\n\nexport default ReservationsCalendar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, CircularProgress } from '@material-ui/core';\nimport styles from './styles';\nimport { ReservationsToolbar, ReservationsTable } from './components';\nimport { getReservations, getMovies, getCinemas } from '../../../store/actions';\nimport ReservationsCalendar from './components/ReservationsCalendar/ReservationsCalendar';\nimport { match } from '../../../utils';\n\nclass ReservationList extends Component {\n  state = { mode: 'list', search: '' };\n\n  static propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    const {\n      reservations,\n      movies,\n      cinemas,\n      getReservations,\n      getMovies,\n      getCinemas\n    } = this.props;\n\n    if (!reservations.length) getReservations();\n    if (!movies.length) getMovies();\n    if (!cinemas.length) getCinemas();\n  }\n\n  onChangeMode = () =>\n    this.setState(({ mode }) => ({ mode: mode === 'grid' ? 'list' : 'grid' }));\n\n  onChangeSearch = e => this.setState({ search: e.target.value });\n\n  render() {\n    const { mode, search } = this.state;\n    const { classes, reservations, movies, cinemas } = this.props;\n\n    const filteredReservations = match(search, reservations, 'phone');\n\n    return (\n      <div className={classes.root}>\n        <ReservationsToolbar\n          reservations={filteredReservations}\n          search={search}\n          onChangeSearch={this.onChangeSearch}\n          mode={mode}\n          onChangeMode={this.onChangeMode}\n        />\n        <div className={classes.content}>\n          {!filteredReservations.length ? (\n            <div className={classes.progressWrapper}>\n              <CircularProgress />\n            </div>\n          ) : mode === 'list' ? (\n            <ReservationsTable\n              reservations={filteredReservations}\n              movies={movies}\n              cinemas={cinemas}\n            />\n          ) : (\n            <ReservationsCalendar\n              reservations={filteredReservations}\n              movies={movies}\n              cinemas={cinemas}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ reservationState, movieState, cinemaState }) => ({\n  reservations: reservationState.reservations,\n  movies: movieState.movies,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = {\n  getReservations,\n  getMovies,\n  getCinemas\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReservationList));\n","export default theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  progressWrapper: {\n    paddingTop: '48px',\n    paddingBottom: '24px',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\n"],"sourceRoot":""}